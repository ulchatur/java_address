name: Continuous Deployment
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  start-ec2:
    runs-on: ubuntu-latest
    steps:
      - name: Check EC2 Instance State
        id: check-state
        run: |
          state=$(aws ec2 describe-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }} --query 'Reservations[*].Instances[*].State.Name' --output text)
          echo "Current state: $state"
          if [ "$state" = "stopped" ]; then
            echo "start=true" >> $GITHUB_ENV
          else
            echo "start=false" >> $GITHUB_ENV
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          
      - name: Start EC2 Instance
        if: env.start == 'true'
        run: |
          aws ec2 start-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }}
          aws ec2 wait instance-running --instance-ids ${{ secrets.EC2_INSTANCE_ID }}
          echo "Waiting for 45 seconds to ensure EC2 is up"
          sleep 45
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  deploy:
    runs-on: ci-runner
    needs: start-ec2
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Deploy on EC2 via SSH
        run: |
          echo "Ensuring Docker & Docker Compose are installed..."
          sudo yum update -y
          sudo yum install -y docker
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose  
          echo "Stopping and removing old containers..."
          docker-compose down
          echo "Deploying new containers..."
          docker-compose up -d

#  stop-ec2:
  #  runs-on: ubuntu-latest
 #   needs: deploy
#    if: always()
 #   steps:
  #    - name: Stop EC2 Instance
   #     run: |
    #      aws ec2 stop-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }}
     #     aws ec2 wait instance-stopped --instance-ids ${{ secrets.EC2_INSTANCE_ID }}
      #  env:
       #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         # AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
